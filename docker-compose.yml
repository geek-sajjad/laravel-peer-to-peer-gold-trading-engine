version: "3.8"

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel-app
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            # - .:/var/www
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - laravel
        depends_on:
            - db

    webserver:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        networks:
            - laravel
        depends_on:
            - app

    db:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: gold_peer_to_peer_trading
            MYSQL_ROOT_PASSWORD: password
            MYSQL_USER: users
            MYSQL_PASSWORD: password
        ports:
            - "3306:3306"
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - laravel

    # queue:
    #     image: ${COMPOSE_PROJECT_NAME}_app
    #     container_name: laravel-queue
    #     restart: unless-stopped
    #     working_dir: /var/www
    #     command: php artisan queue:work --queue=order_matching
    #     volumes:
    #         # - .:/var/www
    #         - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    #     depends_on:
    #         - app
    #     networks:
    #         - laravel

    queue:
        build:
            context: .
            dockerfile: Dockerfile
        container_name: laravel-queue
        restart: unless-stopped
        working_dir: /var/www
        command: php artisan queue:work --queue=order_matching
        volumes:
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        depends_on:
            - app
            - db
        networks:
            - laravel

networks:
    laravel:

volumes:
    dbdata:
